<?php
/**************************************************************************************************************

    NAME
        HttpDate.phpclass

    DESCRIPTION
        A trait to be used by http headers that require a date/time value.

    AUTHOR
        Christian Vigh, 05/2015.

    HISTORY
    [Version : 1.0]    [Date : 2015/05/27]     [Author : CV]
        Initial version.

 **************************************************************************************************************/
namespace  	Thrak\Network\RfcProtocols\Http\Traits ;

defined ( '__THRAK_SETUP__' ) or die ( "This file cannot be accessed directly." ) ;


// Used classes
use	Thrak\Types\StringUtilities ;


/*==============================================================================================================

    HttDate class -
        A trait to be used by http headers that require a date/time value.

  ==============================================================================================================*/
trait  HttpDate
   {
	private		$UnixTime ;
	
	
	public function  __get ( $member )
	   {
		switch ( strtolower ( $member ) )
		   {
			case	'date' :
				return ( $this -> UnixTime ) ;
				
			default :
				return ( parent::__get  ( $member ) ) ;
		    }
	    }
	
	
	public function  __set ( $member, $value )
	   {
		switch ( strtolower ( $member ) )
		   {
			case	'date' :
				if  ( is_numeric ( $value ) )
				    {
					$numeric_value	=  ( integer ) $value ;
					$string_value	=  date ( 'r', $value ) ;
				     }
				else
				   {
					$numeric_value	=  strtotime ( $value ) ;
					$string_value	=  date ( 'r', $numeric_value ) ;
				    }
				
				$this -> UnixTime	=  $numeric_value ;
				$this -> Field -> Value	=  $string_value ;
				break ;
				
			default :
				parent::__set ( $member, $value ) ;
		    }
	    }
		
	
	protected function  CheckContent ( )
	   {
		if  ( ( $this -> UnixTime = StringUtilities::IsDateString ( $this -> Field -> Value ) )  ===  false )
			self::ReportError ( "Date \"{$this -> Field -> Value}\" is not a valid date/time expression." ) ;
	    }
    }