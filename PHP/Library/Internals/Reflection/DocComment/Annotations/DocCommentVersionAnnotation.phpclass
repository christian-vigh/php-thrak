<?php
/**************************************************************************************************************

    NAME
        DocCommentVersionAnnotation.phpclass

    DESCRIPTION
        Implements an @Version annotation.

    AUTHOR
        Christian Vigh, 11/2014.

    HISTORY
    [Version : 1.0]    [Date : 2014/11/09]     [Author : CV]
        Initial version.

 **************************************************************************************************************/
namespace 	Thrak\Reflection\Annotations ;

defined ( '__THRAK_SETUP__' ) or die ( "This file cannot be accessed directly." ) ;

use  	Thrak\System\Object ;
use	Thrak\Reflection\DocCommentAnnotation ;


/*==============================================================================================================

    DocCommentVersionAnnotation -
        Implements an @Version annotation.
 
	Available members :
 	- major :
 		Major version number. For example, "1" in "1.2.3.4-beta1".
  
 	- minor :
 		Minor version number. For example, "2" in "1.2.3.4-beta1".
  
 	- release :
 		Release number. For example, "3" in "1.2.3.4-beta1".

 	- build :
 		Build number. For example, "4" in "1.2.3.4-beta1".
  
 	- buildMetadata :
 		Build metadata. For example, "beta1" in "1.2.3.4-beta1".
  
 	- vcs :
 		When the version number comes from a version control system, identifies the VCS system.
 		For example, "GIT" in : "GIT: $Id$".
  
 	- vcsVector :
 		VCS vector. For example, 'Id' in : "GIT: $Id$".
  
 	- description :
 		Description.
  
  ==============================================================================================================*/
class	DocCommentVersionAnnotation		extends  DocCommentAnnotation
   {
	public function  __construct ( $name, $params_array )
	   {
		parent::__construct ( $name, $params_array ) ;
	    }

	
	/*==============================================================================================================
	
	    IsVcs -
	        Returns a boolean indicating whether this version number comes from a version control system (VCS) or not.
	
	  ==============================================================================================================*/
	public function  IsVcs ( )
	   {
		return  ( $this -> Parameters -> vcs  !==  "" ) ;
	    }
	

	/*==============================================================================================================
	
	    __tostring -
	        Special handling is necessary to return the version string part of the @Version annotation.
	
	  ==============================================================================================================*/
	public function  __tostring ( )
	   {
		$values		=  $this -> Parameters ;
		$result		=  "@" . $this -> Name . " " ;
		
		if  ( $values -> vcs  !==  "" )
		   {
			$result		.=  $values -> vcs . ': $' . $values -> vcsVector . '$' ;
		    }
		else if  ( $values -> major  !==  "" )
		   {
			$result		.=  $values -> major ;
			
			if  ( $values -> minor  !==  "" )
			   {
				$result		.=  "." . $values -> minor ;
				
				if  ( $values -> release  !==  "" )
				   {
					$result		.=  "." . $values -> release ;
					
					if  ( $values -> build  !==  "" )
						$result		.=  "." . $values -> build ;
				    }
			    }
			
			if  ( $values ->  buildMetadata  !==  "" )
				$result		.=  "-" . $values -> buildMetadata ;
		    }

		if  ( $result ) 
			$result		.=  " " ;
		
		$result		.=  $values -> description ;
		
		return ( $result ) ;
	    }
    }