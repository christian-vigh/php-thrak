<?php
/***************************************************************************************************

    NAME
	CommandLine.phpclass

    DESCRIPTION
     	A parameter that accepts a command and its arguments.
	A command-line parameter can be specified in the following way :

		cmd opt1 [ ... optn ] ;

	Where "cmd" is the command and the "opt1 ... optn" are its optional arguments (that can 
	include the switch character). 
	The command line parameter must be terminated by a semicolon, unless "optn" is the very last 
	option of the script command line.

    AUTHOR
     	Christian Vigh, 09/2015.

    HISTORY
    [Version : 1.0]	[Date : 2015/09/24]	[Author : CV]
     	Initial version.

***************************************************************************************************/
namespace  	Thrak\Processors\CL ;

defined ( '__THRAK_SETUP__' ) or die ( "This file cannot be accessed directly." ) ;


// Used namespaces and classes
use 	Thrak\Processors\CL\CLException 	as  Exception ;


/*==================================================================================================

    CLCommandParameter class -
	Implements a parameter whose value is the standard output of a command.

  ==================================================================================================*/
class  CLCommandParameter  extends  \Thrak\Processors\CL\CLAbstractParameter
   {
	/*-------------------------------------------------------------------------------------------

		Class constructor.

	 --------------------------------------------------------------------------------------------*/
	public function  __construct ( $parent, $tags, $valuetext = "command" )
	   {
		$this -> Help 			=  "Defines a command-line parameter, ie a command " ;
   		$this -> ReturnValueHelp	=  "Returns the standard output of the specified command as an array of lines." ;
		$this -> ReturnValueType	=  self::RETURN_VALUE_MULTIPLE ;

		parent::__construct ( $parent, $tags, $valuetext ) ;
	    }


	/*-------------------------------------------------------------------------------------------

		Process value.

	 --------------------------------------------------------------------------------------------*/
 	protected function  ProcessValue ( $name, $value )
 	   {
		$status = exec ( $value, $output, $result ) ;

		if  ( $result )
			error ( new CLException ( "Command error for parameter '$name'." ) ) ;

		foreach  ( $output  as  &$line )
			$line = trim ( $line ) ;

		return ( $output ) ;
 	    }
    }