(function($){var constants={classes:{fieldLabel:"form-field-label",fieldValue:"form-field-value",requiredField:"form-required-field",errorFieldValue:"form-error-field-value",errorFieldLabel:"form-error-field-label",uploadFile:"form-field-upload-file",errorFieldMessage:"form-error-field-message",fieldWrapper:"form-field-wrapper",requiredFieldTag:"form-required-tag"},attributes:{fieldType:"field-type",fieldFormat:"field-format",fieldLabel:"label",fieldId:"field-id",fieldName:"field-name",fieldDefaultValue:"field-default-value",formId:"form-id",fieldValidatedValue:"field-validated-value",fieldDatepickerIcon:"field-datepicker-icon",fieldRealtimeValidation:"field-realtime-validation",fieldMinLength:"field-min-length",fieldMaxLength:"field-max-length",fieldMinValue:"field-min-value",fieldMaxValue:"field-max-value"}};var default_form_options={buttonPaneMessage:false,alertOnError:true,url:false,method:'get',ajax:{async:true,dataType:"text"},realtimeValidation:false,validators:{'string':function(form,options,field,result){check_field_length(form,options,field,result);if(result.status===false)
return;},'email':function(form,options,field,result){if(!/^[a-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(result.value)){set_error(options,result,'invalidEmail');}},'date':function(form,options,field,result){var date=field.datepicker('getDate');if(date===null||date===undefined)
result.value='0000-00-00';else result.value=date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate();},'integer':function(form,options,field,result){check_field_numeric_value(form,options,field,result,true);},'float':function(form,options,field,result){check_field_numeric_value(form,options,field,result,true);}},messages:{'default':{formErrors:"Errors have been found in your input data.",mandatoryField:"This field is mandatory.",invalidEmail:"Invalid email address.",valueTooShort:"Input value must be at least %d characters long.",valueTooLong:"Input value must be at most %d characters long.",invalidValueLength:"Input value must have between %d and %d characters.",valueTooLow:"Input %s value must be greater than or equal to %g.",valueTooHigh:"Input %s value must be less than or equal to %g.",valueOutOfRange:"Input %s value must be between %g and %g.",integerValueType:"integer",floatValueType:"float"},'fr':{formErrors:"Des erreurs ont &eacute;t&eacute; rencontr&eacute;es dans les valeurs que vous avez saisies.",mandatoryField:"Ce champ est obligatoire.",invalidEmail:"Adresse email invalide.",valueTooShort:"La valeur saisie doit faire au moins %d caract&egrave;res.",valueTooLong:"La valeur saisie doit faire au plus  %d caract&egrave;res.",invalidValueLength:"La valeur saisie doit faire entre %d et %d caract&egrave;res.",valueTooLow:"Le nombre %s saisi doit &ecirc;tre sup&eacute;rieur ou &eacute;gal &agrave; %g.",valueTooHigh:"Le nombre %s saisi doit &ecirc;tre inf&eacute;rieur ou &eacute;gal &agrave; %g.",valueOutOfRange:"Le nombre %s saisi doit &ecirc;tre compris entre %g et %g.",integerValueType:"entier",floatValueType:"r&eacute;el"},'en':{formErrors:"Errors have been found in your input data.",mandatoryField:"This field is mandatory.",invalidEmail:"Invalid email address.",valueTooShort:"Input value must be at least %d characters long.",valueTooLong:"Input value must be at most %d characters long.",invalidValueLength:"Input value must have between %d and %d characters.",valueTooLow:"Input %s value must be greater than or equal to %g.",valueTooHigh:"Input %s value must be less than or equal to %g.",valueOutOfRange:"Input %s value must be between %g and %g.",integerValueType:"integer",floatValueType:"float"}}};var this_form;$.form=function(){var id,template,dialog_options={};for(var i=0;i<arguments.length;i++){var arg=arguments[i];var argtype=typeof(arg);if(argtype=='string'){if(id){if(!template)
template=arg;}
else id=arg;}
else if(argtype=='object')
dialog_options=$.extend(dialog_options,arg);}
dialog_options.formOptions=$.extend(default_form_options,dialog_options.formOptions,{id:id});if(template===undefined)
template='<div><span style="color: #FF0000">*** NO FORM TEMPLATE SPECIFIED FOR #'+id+'</div>';if(dialog_options.position===undefined||dialog_options.position.toLowerCase()=='center')
dialog_options.position={my:"center",at:"center",of:window};if(dialog_options.delayPosition===undefined)
dialog_options.delayPosition=true;if(dialog_options.removeOnClose===undefined)
dialog_options.removeOnClose=true;var $body=$('body');var $form=getform(id);var $element=wrapform(id,dialog_options.formOptions,template);if($form.length==0)
$body.append($element);else $form.replaceWith($element);$form=getform(id);$form.attr(constants.attributes.formId,id);this_form=$form;normalize_attributes($form);install_field_handlers($form);$('.'+constants.classes.fieldValue,$form).each(function(){var $this=$(this);var this_id=$this.attr('id');var $parent=$this.parent();$this.wrap('<div class="'+constants.classes.fieldWrapper+'" field-wrapper-id="'+this_id+'"></div>');var $wrapper=$('[field-wrapper-id="'+this_id+'"]');$parent.append('<div class="'+constants.classes.errorFieldMessage+'"></div>');if($this.hasClass(constants.classes.requiredField)&&!$this.hasClass(constants.classes.requiredFieldTag)){var label=get_associated_label($this);if(!label.hasClass(constants.classes.requiredFieldTag))
$wrapper.addClass(constants.classes.requiredFieldTag);}});$form.dialog(dialog_options);return($form);}
$.widget('thrak.dialog',$.ui.dialog,{open:function(){this._super();if(this.element.dialog('option','delayPosition'))
this.element.dialog('widget').position(this.element.dialog('option','position'));var form_options=this.element.dialog('option','formOptions');if(form_options&&form_options.buttonPaneMessage){var extra=$('.ui-dialog-buttonpane .ui-dialog-buttonpane-extra');if(extra.length==0){var button_pane=$('.ui-dialog-buttonpane');button_pane.append('<div class="ui-dialog-buttonpane-extra-wrapper">'+'<div class="ui-dialog-buttonpane-extra">'+form_options.buttonPaneMessage+'</div>'+'</div>');}}},close:function(){this._super();if(this.element.dialog('option','removeOnClose'))
this.element.remove();},validate:function(){var status=validate(this.element);return(status);},submit:function(){var $this=this.element;var form_options=$this.dialog('option','formOptions');form_options.data=$.extend(form_options.data,collect_field_values($this));if(form_options.method==="post"||form_options.method==="get")
send_regular_form($this,form_options);else if(form_options.method=="ajax/post"||form_options.method=="ajax/get"){form_options.ajax.method=(form_options.method=="ajax/get")? "get":"post";form_options.ajax.data=form_options.data;send_ajax_form($this,form_options);}
else{form_options.method="get";send_regular_form($this,form_options);}}});function validate(form){var status=validate_values(form);var options=form.dialog('option');if(status===false){var first_error=$('.'+constants.classes.errorFieldValue).first();if(options.formOptions.alertOnError){$.error(options.formOptions.messages[$.locale()].formErrors,function(){first_error.focus();});}
else first_error.focus();}
return(status);}
function validate_value($this,value){var options=this_form.dialog('option');var validators=options.formOptions.validators;var format=$this.attr(constants.attributes.fieldFormat).toLowerCase();var type=$this.attr(constants.attributes.fieldType).toLowerCase();var result={value:value,status:true,message:undefined}
if(value==''){if($this.hasClass(constants.classes.requiredField))
set_error(options,result,'mandatoryField');}
if(result.status){switch(type){case 'text':if(validators[format]!==undefined)
validators[format](this_form,options,$this,result);else throw("Parameter format \""+format+"\" not yet handled.");break;case 'select':result.value=$this.val();break;}}
$this.attr(constants.attributes.fieldValidatedValue,result.value);set_field_error_state($this,!result.status,result.message);return(result.status);}
function validate_values(form){var options=form.dialog('option');var error_fields=[];$('.'+constants.classes.fieldValue,form).filter(filter_field).each(function(index,obj){var $this=$(obj);var status=validate_value($this,$this.val());if(status!==true)
error_fields.push([$this,status]);});return(error_fields.length==0);}
function check_field_length(form,options,field,result){var min_length=get_integer_attribute(field,constants.attributes.fieldMinLength),max_length=get_integer_attribute(field,constants.attributes.fieldMaxLength);var length=result.value.length;if(min_length!==undefined){if(max_length===undefined){if(length<min_length)
set_error(options,result,'valueTooShort',min_length);}
else{if(length<min_length||length>max_length)
set_error(options,result,'invalidValueLength',min_length,max_length);}}
else if(max_length!==undefined){if(length>max_length)
set_error(options,result,'valueTooLong',max_length);}}
function check_field_numeric_value(form,options,field,result,is_integer){var min_value=get_numeric_attribute(field,constants.attributes.fieldMinValue),max_value=get_numeric_attribute(field,constants.attributes.fieldMaxValue);var default_value=get_numeric_attribute(field,constants.attributes.fieldDefaultValue,'');var typename=options.formOptions.messages[$.locale()][(is_integer)? 'integerValueType':'floatValueType'];var value;if(result.value==''){if(default_value=='')
return;result.value=default_value;}
value=floatval(result.value);if(min_value!==undefined){if(is_integer)
min_value=Math.floor(min_value);if(max_value===undefined){if(value<min_value)
set_error(options,result,'valueTooLow',typename,min_value);}
else{if(is_integer)
max_value=Math.floor(max_value);if(value<min_value||value>max_value)
set_error(options,result,'valueOutOfRange',typename,min_value,max_value);}}
else if(max_value!==undefined){if(is_integer)
max_value=Math.floor(max_value);if(value>max_value)
set_error(options,result,'valueTooHigh',typename,max_value);}}
function collect_field_values(form){var values={__uploads__:[]};var radiobuttons={};$('.'+constants.classes.fieldValue,form).filter(filter_field).each(function(index,obj){var $this=$(obj);var name=$this.attr(constants.attributes.fieldName);var type=$this.attr(constants.attributes.fieldType);var value;switch(type){case 'checkbox':value=($this.is(':checked'))? "1":"0";break;case 'radio':if(name!==undefined&&radiobuttons[name]===undefined)
radiobuttons[name]=name;return;case 'file':values.__uploads__.push($this);return;default:value=$this.attr(constants.attributes.fieldValidatedValue);}
values[name]=value;});for(var name in radiobuttons){var $button=$('[name="'+name+'"][type="radio"]:checked',form);var value=($button.length==0)? '':$button.val();values[name]=value;}
return(values);}
function filter_field(index,obj){var $this=$(obj);return($this.css('visibility').toLowerCase()!='hidden'&&$this.css('display').toLowerCase()!='none');}
function get_boolean_attribute($this,attr,default_value){var value=$this.attr(attr);if(value===''||value===undefined)
return(default_value);value=value.trim().toLowerCase();if(value=='false'||value=='no'||value=='off'||value=='0')
return(false);else return(true);}
function get_integer_attribute($this,attr,default_value){var value=$this.attr(attr);if(value===''||value===undefined)
return(default_value);value=value.trim().toLowerCase();if(is_numeric(value))
return(intval(value));else return(default_value);}
function get_numeric_attribute($this,attr,default_value){var value=$this.attr(attr);if(value===''||value===undefined)
return(default_value);value=value.trim().toLowerCase();if(is_numeric(value))
return(floatval(value));else return(default_value);}
function get_field_format($this){var format=$this.attr(constants.attributes.fieldFormat);if(format===''||format===undefined){if($this.hasClass('date'))
format='date';else format='string';}
else format=format.toLowerCase();switch(format){case 'int':format='integer';break;case 'real':case 'double':format='float';break;case 'string':case 'email':case 'integer':case 'float':case 'date':case 'datetime':case 'time':break;default:format='string';}
return(format);}
function get_field_type($this){var tag=$this.prop('tagName').toLowerCase();var input_type;var field_type;switch(tag){case 'select':field_type='select';break;case 'textarea':field_type="text";break;case 'input':input_type=$this.attr('type');switch(input_type){case undefined:case 'text':case 'password':field_type='text';break;case 'radio':field_type='radio';break;case 'checkbox':field_type='checkbox';break;case 'file':field_type='file';break;default:field_type='ignored';}
break;default:field_type='ignored';}
return(field_type);}
function get_associated_label(obj){var selector='label[for="'+obj.attr('id')+'"]';return($(selector));}
function has_realtime_validation($this){var options=this_form.dialog('option','formOptions');var realtime=get_boolean_attribute($this,constants.attributes.fieldRealtimeValidation,options.realtimeValidation);return(realtime);}
function install_field_handlers(form){$('.'+constants.classes.fieldValue).keypress(function(e){var $this=$(this);if(has_realtime_validation($this))
validate_value($this,$this.val()+String.fromCharCode(e.keyCode||e.which));}).keyup(function(e){var $this=$(this);if(has_realtime_validation($this)){var isBackspaceOrDelete=(event.keyCode==8||event.keyCode==46);if(isBackspaceOrDelete)
validate_value($this,$this.val());}}).blur(function(e){var $this=$(this);if(!get_boolean_attribute($(e.relatedTarget),'cancel',false))
validate_value($this,$this.val());return(true);});}
function normalize_attributes(form){$('.'+constants.classes.fieldValue).each(function(index,obj){var $this=$(obj);var format=get_field_format($this);$this.attr(constants.attributes.fieldFormat,format);$this.attr(constants.attributes.fieldType,get_field_type($this));if($this.attr(constants.attributes.fieldId)===undefined)
$this.attr(constants.attributes.fieldId,$this.attr('id'));if($this.attr(constants.attributes.fieldName)===undefined){var name=$this.attr('name');if(name===undefined)
$this.attr(constants.attributes.fieldName,$this.attr('id'));else $this.attr(constants.attributes.fieldName,name);}
if($this.attr(constants.attributes.fieldLabel)===undefined){var associated_label=get_associated_label($this);if(associated_label.length==1)
$this.attr(constants.attributes.fieldLabel,associated_label.html().replace(/\s*:\s*$/,''));else $this.attr(constants.attributes.fieldLabel,"<span style='color: #FF0000'>*** MISSING LABEL ***</span>");}
switch(format){case 'date':var has_picker=get_boolean_attribute($this,constants.attributes.fieldDatepickerIcon,true);if(has_picker){$this.after('<div class="ui-datepicker-icon"></div>');$this.next('.ui-datepicker-icon').click(function(e){$this.datepicker('show');});}
break;case 'integer':if($this[0].style.width==''){var size_attr=$this.attr('size');if(size_attr===''||size_attr===undefined){var max_value=get_integer_attribute($this,constants.attributes.fieldMaxValue);var max=Number.MAX_SAFE_INTEGER;if(max_value!==undefined)
max=max_value;max=Math.floor(Math.log10(max))+1;$this.css('width',(max/1.7)+'em');}}
break;}});$('.'+constants.classes.errorField).removeClass(constants.classes.errorField);}
function set_error(options,result,errconst){var message=options.formOptions.messages[$.locale()][errconst];var argv=[message].concat(Array.prototype.slice.call(arguments,3));result.status=false;result.message=sprintf.apply(null,argv);}
function set_field_error_state($this,state,msg){var $parent=$this.parent().parent();if(state){var label=get_associated_label($this);$this.addClass(constants.classes.errorFieldValue);label.addClass(constants.classes.errorFieldLabel);$('.'+constants.classes.errorFieldMessage,$parent).addClass('visible').html(msg);return(false);}
else{var label=get_associated_label($this);$this.removeClass(constants.classes.errorFieldValue);label.removeClass(constants.classes.errorFieldLabel);$('.'+constants.classes.errorFieldMessage,$parent).removeClass('visible').html('');return(true);}}
function wrapform(form_id,form_options,template){var has_files=$('[type="file"]').length>0;var encoding=(has_files)? '':'enctype="multipart/form-data"';var form_html='<form id="'+form_id+'" method="'+form_options.method+'" '+encoding+' '+'action="'+form_options.url+'"';if(form_options.attributes){for(var name in form_options.attributes)
form_html+=name+'"'+form_options.attributes[name]+'"';}
form_html+=">"+template+'</form>';return(form_html);}
function getform(id){return($('#'+id));}
function transform_form(form,form_options){var form_html='';for(var name in form_options.data){var value=form_options.data[name];if(name!='__uploads__')
form_html+="\n\t"+'<input name="'+name+'" type="text" value="'+value+'"/>';}
$('input[type!="file"], select, textarea',form).remove();form.append(form_html);}
function send_regular_form(form,form_options){form_options.beforeSubmit&&form_options.beforeSubmit();transform_form(form,form_options);form.submit();}
function send_ajax_form(form,form_options){form_options.beforeSubmit&&form_options.beforeSubmit();transform_form(form,form_options);var form_data=new FormData($('#'+form_options.id)[0]);var request_data={url:form_options.url,cache:false,contentType:false,processData:false};var ajax_data=$.extend(request_data,form_options.ajax,{data:form_data});$.ajax(ajax_data);}}(jQuery));